<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>教程系列三：Hexo博客部署到云服务器上</title>
    <link href="/2020/05/08/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%B8%89%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E4%B8%8A/"/>
    <url>/2020/05/08/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%B8%89%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="教程系列三：Hexo博客部署到云服务器上"><a href="#教程系列三：Hexo博客部署到云服务器上" class="headerlink" title="教程系列三：Hexo博客部署到云服务器上"></a>教程系列三：Hexo博客部署到云服务器上</h1><p>部署在 <a href="[https://baike.baidu.com/item/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8](https://baike.baidu.com/item/云服务器)">云服务器</a> 上，常见的 云服务器 国内 如<a href="https://www.aliyun.com/" target="_blank" rel="noopener">阿里云</a> <a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a> 等。当然现在的云服务器可谓“遍地开花”。</p><p>我们本教程上使用的是阿里云</p><p>自行在阿里云上注册实名认证，如果是学生的话可以进行学生认证有优惠。第一次使用阿里云会有一个免费一个月的使用权限。阿里云官网上的教程真的非常丰富，可以学习关于云的绝大部分知识。我们在这里直接详细说明如何部署。</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>在部署云服务器之前我们需要先拥有一个自己的域名，这里推荐域名和服务器在一家购买，例如 域名和服务器都在阿里云购买，如果不是在同一个地方基本上不能完成网站的备案。</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-01.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-1】</center><p>如【图2-2-1】直接在官网顶部搜索页域名，然后再搜索框内输入自己想要的域名搜索。</p><p>如果对域名没有特殊要求的话，你可以找到很便宜的域名，几块钱就可以使用一年。</p><p>后续操作基本是一键购买不在赘述。</p><h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>推荐购买和使用 阿里云的  <strong><em>云服务器ECS</em></strong>  和   <strong><em>轻量应用服务器</em></strong>  二者均可。</p><p>以这里的学生服务器举例</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-02.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-2】</center><p>立即购买</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-03.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-3】</center>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-04.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-4】</center><p>我的学生优惠可能用完了吧，这里价格就上来了，一个月的话就是9.5元，三个月就是28.5元。</p><p><strong>这里特别提醒</strong> </p><p>1、请不要选择 Windows系统  Windows系统占用内存太大，对于我们这种配置较低的学生服务器来说，有点吃力。所以推荐使用CentOS 7.3系统 当然其他的也可以。</p><p>2、大家要一次性购买3个月的服务器，因为阿里云是购买了3个月以上的服务器才可以进行 域名的备案的，那我们就买三个月。有些云服务器买一个月也是可以进行备案的，大家自行选择比较。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>买完之后，进行网站备案。</p><p>%accordion%为什么要备案？%accordion%</p><p>就是为了防止在网上从事非法的网站经营活动，打击不良互联网信息的传播，如果网站不备案的话，很有可能被查处以后关停。</p><p>另外可以方便我们在上传博客的图片时，网站的图床可能需要你提供博客的域名网站，这个网站是需要进行过备案的网站才可以使用，我们后面会说到。</p><p>%/accordion%</p><p>在首页左上角直接点击备案进行备案</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-05.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-5】</center><p>备案过程 也很方便 ，可以根据阿里云的提示进行下去，或者拨打阿里云的官方客服进行咨询。</p><p>备案过程在审核时间基本上在5天左右，基本上你在操作完后一天内会接到来自阿里的客服电话询问你为什么要备案之类的，可以帮你解决存在的问题，不要错过关注手机。</p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><p>把你的域名添加到服务器</p><p>依旧在左上角点击   控制台</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-05.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-5】</center><p>找到你的服务器点开，然后找到  域名  添加域名  添加完成后  点击DNS解析，会帮你解析出来你的网站的IP地址</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-06.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-6】</center><p>这里图是 轻量型应用服务器 的界面，如果是ECS 自己摸索一下，基本是一样的。</p><h4 id="设置服务器密码"><a href="#设置服务器密码" class="headerlink" title="设置服务器密码"></a>设置服务器密码</h4><p>回到你的服务器概览 ，找到服务器信息，本条后面找到重置密码，这个密码是你登录到你的系统时用的密码，自己记住。</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-07.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-7】</center><h4 id="宝塔Linux面板"><a href="#宝塔Linux面板" class="headerlink" title="宝塔Linux面板"></a>宝塔Linux面板</h4><p>借助宝塔Linux面板能够更方便的完成我们的网站部署。</p><p><a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">网站地址</a></p><p>进入网址基本上就是教程页了，可以完全按照上面的要求进行操作，不过这里我还是简单说一下操作。</p><p>根据提示，我们用的是阿里云，打开相应连接</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-08.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-8】</center><p>按照教程进行安全组设置，根据介绍，不设置可能用不了。打开来是ECS的教程，轻量应用服务器更简单一些 如【图2-2-9】</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-09.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-9】</center><p>完成后  回到面板安装教程</p><p>复制Centos安装命令（根据你自己的系统进行选择复制）</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-10.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-10】</center><p>回到云服务器点击概述 左上角  远程连接  连接至操作系统</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-11.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-11】</center><p>打开后是一个非常简洁的DOS界面</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-12.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-12】</center><p>紧接着输入 su 回车 然后输入密码 ，密码是刚刚我们重设过的密码，输入密码是不会显示，注意不要输错，输完后回车就登录了，然后粘贴我们刚刚复制的Centos安装命令，会自动安装，大概等待5分钟左右</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-13.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-13】</center><p>完成后如【图2-2-13】，这里请注意红线框内的内容，这是你的宝塔面板的网址和账号密码，这个自己复制下来保存好，因为后续操作都在面板上操作。</p><p>可以看到Waring 内容就是提示我们这些端口需要配置，我们在刚刚配置过了就不用管了。</p><p>复制好刚刚的内容后，我们打开 你的宝塔网址  BT-Panel ： 后面的网址 复制在浏览器打开，然后就把刚刚的用户名密码复制粘贴过来 登录。</p><p>会提示你安装一些软件，点击推荐安装就可以，大概等待5分钟</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-14.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-14】</center><p>完成后如【图2-2-15】点击网站 添加站点 </p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-15.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-15】</center><p>把自己的域名填进去即可。</p><p>添加完成后点击根目录</p><p>选择上传   选择目录</p><p><strong>目录选择你 博客目录下的public文件夹</strong></p><p>开始上传 等待完成</p><p>这步的操作其实就是上传Github时用的   hexo d  命令 是一样的功能。</p><p>注意每次有新的博客内容或者更改了博客都记得要在宝塔面板上传public文件夹</p><p>这样就已经成功上传到你的服务器了，但是还有最后两个简单的小步骤的内容需要操作请不要着急！</p><h4 id="最后两小步"><a href="#最后两小步" class="headerlink" title="最后两小步"></a>最后两小步</h4><h5 id="1、更改Config文件"><a href="#1、更改Config文件" class="headerlink" title="1、更改Config文件"></a>1、更改Config文件</h5><p>找到url</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-16.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-16】</center><p>这里填入自己博客的域名</p><h5 id="2、更改Github-Pages"><a href="#2、更改Github-Pages" class="headerlink" title="2、更改Github Pages"></a>2、更改Github Pages</h5><p>打开Github对应仓库 点击设置 下拉找到 Github Pages</p><p>按照如【图2-2-17】位置输入你的域名 保存Save</p>  <div align="center"> <img src="http://cdn.icecold.xyz/%E5%9B%BE2-2-17.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-2-17】</center><p>好了大功告成，这时候在浏览器输入你的域名就可以访问到你的博客了！</p><center><font color="blue" size="5">Hexo部署在云上步骤已完成！ </font> </center> ]]></content>
    
    
    
    <tags>
      
      <tag>部署到云服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教程系列二：Hexo博客部署到Github</title>
    <link href="/2020/04/16/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%BA%8C%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Github/"/>
    <url>/2020/04/16/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%BA%8C%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Github/</url>
    
    <content type="html"><![CDATA[<h1 id="教程系列二：Hexo博客部署到Github"><a href="#教程系列二：Hexo博客部署到Github" class="headerlink" title="教程系列二：Hexo博客部署到Github"></a>教程系列二：Hexo博客部署到Github</h1><h2 id="注册Github"><a href="#注册Github" class="headerlink" title="注册Github"></a>注册Github</h2><p><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>是一个面向<a href="https://baike.baidu.com/item/开源/20720669" target="_blank" rel="noopener">开源</a>及私有<a href="https://baike.baidu.com/item/软件/12053" target="_blank" rel="noopener">软件</a>项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。我们就是利用Github的<strong>托管</strong>功能；另外Github还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能，感兴趣的同学可以点击链接了解     <a href="https://baike.baidu.com/item/Github" target="_blank" rel="noopener">百度百科</a>   <a href="https://zh.wikipedia.org/wiki/GitHub" target="_blank" rel="noopener">维基百科</a>     。另外国内还有<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>平台与Github类似，同学们自行了解这里不做赘述。</p><p>首先打开<a href="https://github.com" target="_blank" rel="noopener">官网</a>，第一次登陆时默认注册页面，若不是请点击<img src="http://q7tx4p5qa.bkt.clouddn.com/Sign-up.png" srcset="/img/loading.gif" alt="signup">进行注册</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-1.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-1】</center><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>注册完成后，点击<img src="http://q7tx4p5qa.bkt.clouddn.com/Sign-in.png" srcset="/img/loading.gif" alt="signin">登陆</p><p>登陆完成后，点击页面右上角   New repository 创建新仓库  如【图2-2】</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/NEWresp.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-2】</center><p>按照【图2-3】进行创建仓库</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-3.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-3】</center><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>创建完成后进行如【图2-4】操作</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-04.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-4】</center><p>打开 blog  文件夹 里的   “_config.yml”  打不开的话，右键用记事本方式打开</p><p>拉倒最后找到 </p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-05.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-5】</center><p>把他改成      <strong>注意！每一个：后面都有空格 ！！！</strong></p><pre><code class="DOS">deploy:  type: &#39;git&#39;  repo: 刚刚【图2-4】复制的内容  branch: master</code></pre><p>  <strong>保存 关闭文件</strong></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>还记得我们之前安装过Git吗？</p><p>在blog文件下空白处右击   Git Bash Here</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-6.png" srcset="/img/loading.gif" hight="width="></div><center>【图2-6】</center><p>这一步其实作用就是和打开Cmd的定位到blog文件夹下是一样的，Git完全可以代替Cmd窗口，这样操作比较方便</p><p>然后输入</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>  安装 hexo 博客部署的插件</p><p>  如【图2-7】即可</p>  <div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-7.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-7】</center><p>  接下来最后一步</p><p>  输入</p><pre><code>hexo d</code></pre>  <div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-8.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-8】</center>  <div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-9.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-9】</center><p>  如【图2-8】、【图2-9】完成即可，可以看到这步把很多本地的文件上传了</p><p>  <strong>注意：有时候会发现不动了 可能是提示你需要输入 你的Github账号和密码</strong> </p><p>  <strong>有两种情况，第一种是直接在git窗口里 提示输入，输入账号回车，密码回车即可继续，输入密码时时看不见输入的密码，但实际上在输入，尽量不要输错，万一输了会提示失败，重新hexo d即可。第二种情况是，会弹出一个Github的图形界面小窗口直接输入账号密码确认即可继续。这里为什么没有演示，因为输入一次密码之后电脑就会记住你的账号密码，不用重新输入，所以这里没有图片演示了。相信大家可以随机应变，之后如果有重新输入我会更新的。</strong></p><p>  然后打开你的Github仓库会看到有一些变化，没有的话就刷新一下</p>  <div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE2-010.png" srcset="/img/loading.gif" hight="width="></div>  <center>【图2-10】</center><p>  可以到已经存在了很多文件，这些就是从本地上传的文件</p><p>  根据【图2-10】片复制一下链接</p><p>  在 浏览器 地址栏粘贴 回车 即可访问</p><p>  如果访问不了，两种解决方法，1、多刷新几次，等待显示。2、检查自己的仓库名是否和用户名一样，如果不一样请参考【图2-3】重新创建仓继续步骤即可。</p><center><font color="blue" size="5">Hexo部署在Github步骤已完成！ </font> </center> ]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>教程系列一：Hexo博客本地搭建</title>
    <link href="/2020/04/05/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA/"/>
    <url>/2020/04/05/%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="教程系列一：本地搭建Hexo博客"><a href="#教程系列一：本地搭建Hexo博客" class="headerlink" title="教程系列一：本地搭建Hexo博客"></a>教程系列一：本地搭建Hexo博客</h1><h2 id="第一步：安装与配置必备软件和环境"><a href="#第一步：安装与配置必备软件和环境" class="headerlink" title="第一步：安装与配置必备软件和环境"></a>第一步：安装与配置必备软件和环境</h2><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>    (选择好路径后，一直下一步即可)<br><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>     (npm跟随Node.js安装包，可以不用重复安装)<br> <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git(官方网站)</a>  或者  <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">git淘宝镜像</a>  （两种相同。前者国外网站下载速度慢，后者国内下载速度更快)<br><br></p><p> 安装完成后 使用 WIN+R 输入cmd 打开系统 dos 界面 (如图1-1)</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-1.png" srcset="/img/loading.gif"></div><center>【图1-1】</center><h4 id="依次输入"><a href="#依次输入" class="headerlink" title="依次输入"></a>依次输入</h4><pre><code class="dos">node -v</code></pre><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-2.png" srcset="/img/loading.gif" width="55%"></div><center>【图1-2】</center><pre><code class="dos">npm -v</code></pre><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-3.png" srcset="/img/loading.gif" width="55%"></div><center>【图1-3】</center><pre><code class="dos">git</code></pre><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-4.png" srcset="/img/loading.gif" hight="width="></div><center>【图1-4】</center><p>  <font color="blue" size="5">按步骤依次输入并回车后 得到以上版本号或者代码即为</font><font color="red" size="5">安装成功！</font></p><h4 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h4><p>  【可选项】把npm源改为淘宝镜像源可大大加快npm下载速度（如果用此方法以后使用npm时改为cnpm）</p><p>  在dos命令簿输入<br>  <br></p><pre><code class="html">npm config set registry http://registry.npm.taobao.org/</code></pre>  <br><p>  完成即可</p><p>  安装hexo</p><pre><code class="dos">  npm install hexo-cli -g</code></pre><p>  若已安装淘宝镜像源则为</p><pre><code class="dos">  cnpm install hexo-cli -g</code></pre><p>  等待安装，出现版本号即安装成功</p><p>  我们还可以输入</p><pre><code class="dos">  hexo -v</code></pre><p>  来检查是否安装成功 如【图1-5】则安装成功</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-5.png" srcset="/img/loading.gif" hight="75%" width="75%"></div><center>【图1-5】</center><h2 id="第二步：搭建本地博客"><a href="#第二步：搭建本地博客" class="headerlink" title="第二步：搭建本地博客"></a>第二步：搭建本地博客</h2><h3 id="1-博客初始化"><a href="#1-博客初始化" class="headerlink" title="1. 博客初始化"></a>1. 博客初始化</h3><p>首先在你的硬盘内创建一个名为 blog  的 <font color="red" size="5"><strong>空</strong></font> 文件夹</p><p>在刚刚的DOS命令簿内输入</p><pre><code class="dos">md blogcd blog</code></pre><p>md为新建文件夹   cd为进入blog文件夹</p><p>此步骤也可以在硬盘根目录下 右击新建文件夹 用此方法记住利用cd命令进入blog文件夹内</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-6.png" srcset="/img/loading.gif" hight="230" width="399"></div><center>【图1-6】</center><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>输入代码</p><pre><code class="dos">hexo init</code></pre><p>等待下载完成即可进入下一步</p><h3 id="2-大功告成！本地预览博客"><a href="#2-大功告成！本地预览博客" class="headerlink" title="2. 大功告成！本地预览博客"></a>2. 大功告成！本地预览博客</h3><h4 id="启动！"><a href="#启动！" class="headerlink" title="启动！"></a>启动！</h4><p>输入代码</p><pre><code class="dos">hexo s</code></pre><p>如【图1-7】</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-6.png" srcset="/img/loading.gif" hight="width="></div><center>【图1-7】</center><p>这时，博客已经生成了！</p><p>打开浏览器 输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  即可看到你的博客初始页</p><div align="center"> <img src="http://q7tx4p5qa.bkt.clouddn.com/%E5%9B%BE1-8.png" srcset="/img/loading.gif" hight="width="></div><center>【图1-8】</center><center><font size="5" color="blue">本地博客搭建已完成，系列一结束</font></center>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>美化</title>
    <link href="/2020/04/02/%E7%BE%8E%E5%8C%96/"/>
    <url>/2020/04/02/%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/fleabass.jpg" srcset="/img/loading.gif" alt="fleabass"></p><p><embed src="//music.163.com/style/swf/widget.swf?sid=25843040&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all"><br><embed src="//music.163.com/style/swf/widget.swf?sid=1305364671&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all"><br>单独页面顶部大图</p><p>文章封面图片</p><p>单独音乐播放</p><p>代码高亮</p><pre><code class="python">import turtle,timedef drawPoint():    turtle.back(11)    turtle.right(90)    turtle.fd(50)    turtle.pendown()    turtle.circle(0.5)    turtle.penup()    turtle.back(50)    turtle.left(90)    turtle.fd(11)def drawGap():      #绘制数码管间隔    turtle.penup()    turtle.fd(5)def drawLine(draw):     #绘制单段数码管    drawGap()    turtle.pendown() if draw else turtle.penup()    turtle.fd(40)    drawGap()    turtle.right(90)def drawDigit(digit):   #根据数字绘制七段数码管    drawLine(True) if digit in [2,3,4,5,6,8,9]else drawLine(False)    drawLine(True) if digit in [0,1,3,4,5,6,7,8,9] else drawLine(False)    drawLine(True) if digit in [0,2,3,5,6,8,9] else drawLine(False)    drawLine(True) if digit in [0,2,6,8] else drawLine(False)    turtle.left(90)    drawLine(True) if digit in [0,4,5,6,8,9] else drawLine(False)    drawLine(True) if digit in [0,2,3,5,6,7,8,9] else drawLine(False)    drawLine(True) if digit in [0,1,2,3,4,7,8,9] else drawLine(False)    turtle.left(180)    turtle.penup()  #为绘制后续数字确定位置    turtle.fd(20)   #为绘制后续数字确定位置def drawDate(date):     #date为日期，格式为&#39;%Y-%m=%d+&#39;    turtle.pencolor(&quot;red&quot;)    for i in date:        if i == &#39;-&#39;:            turtle.write(&#39;年&#39;,font=(&quot;Arial&quot;,22,&quot;normal&quot;))            turtle.pencolor(&quot;green&quot;)            turtle.fd(40)        elif i == &quot;=&quot;:            turtle.write(&#39;月&#39;,font=(&quot;Arial&quot;,22,&quot;normal&quot;))            turtle.pencolor(&quot;blue&quot;)            turtle.fd(40)        elif i == &quot;+&quot;:            turtle.write(&#39;日&#39;,font=(&quot;Arial&quot;,22,&quot;normal&quot;))        else:            drawDigit(eval(i))      #通过eval()函数将数字变为整数            drawPoint()def main():    turtle.setup(800,350,200,200)    turtle.penup()    turtle.fd(-300)    turtle.pensize(5)    drawDate(time.strftime(&#39;%Y-%m=%d+&#39;,time.gmtime()))#time.strftime(&#39;%Y-%m=%d+&#39;,time.gmtime())    turtle.hideturtle()    turtle.done()main()</code></pre><p>便笺</p><p class="note note-danger"> 大好き</p><pre><code class="html">&lt;i class=&quot;far fa-heart&quot;&gt;&lt;/i&gt;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>check</title>
    <link href="/2020/03/27/check/"/>
    <url>/2020/03/27/check/</url>
    
    <content type="html"><![CDATA[<p><img src="/27/check/ENCORE.png" srcset="/img/loading.gif" alt="encore"></p><p><img src="/27/check/ENCORE.png" srcset="/img/loading.gif" alt="ecore"></p><p><img src="http://img0.imgtn.bdimg.com/it/u=1307955174,105946806&fm=26&gp=0.jpg" srcset="/img/loading.gif" alt="atm"></p><p><img src="/27/check/../picture/p13020648.jpg" srcset="/img/loading.gif" alt="img"></p><p><img src="/27/check/../picture/6de01736a00e4c60c6e5289233da8ae70e08ba62.jpg" srcset="/img/loading.gif" alt="tom"></p><p><img src="/27/check/../picture/ENCORE.png" srcset="/img/loading.gif" alt="ENCORE"></p><p><img src="http://img4.imgtn.bdimg.com/it/u=3483279967,1114319311&fm=26&gp=0.jpg" srcset="/img/loading.gif" alt="light"></p><p><img src="/27/check/picture/5c3f47b8622768ac2703e0e1_1024.jpg" srcset="/img/loading.gif" alt="DAGU"></p><p><img src="/27/check/E:%5CData%5Cblog%5Csource%5Cpicture%5Cf603918fa0ec08faff8b51e152ee3d6d54fbdae9.jpg" srcset="/img/loading.gif" alt="ss"></p><p><img src="http://g.hiphotos.baidu.com/zhidao/pic/item/f603918fa0ec08faff8b51e152ee3d6d54fbdae9.jpg" srcset="/img/loading.gif" alt="ss"></p><p><img src="http://q7tx4p5qa.bkt.clouddn.com/ENCORE.png" srcset="/img/loading.gif" alt="encore"></p><p><img src="/27/check/E:%5CData%5Cblog%5Csource_posts%5Ccheck%5CENCORE-1585276189841.png" srcset="/img/loading.gif" alt="e"></p><p><img src="/27/check/E:%5CData%5Cblog%5Csource_posts%5Ccheck%5Cf4150cf3d7ca7bcb42dd9cdeb9096b63f724a8bc.jpg" srcset="/img/loading.gif" alt="sq"></p><p><img src="/27/check/b0cf31094b36acafec6a4d0379d98d1000e99c6c.jpg" srcset="/img/loading.gif" alt="g"></p><p><img src="/27/check/E:%5CData%5Cblog%5Csource_posts%5Ccheck%5Cu=3743434860,1688619269&fm=26&gp=0.jpg" srcset="/img/loading.gif" alt="fenderbassflea"></p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1585286605024&di=51a51eb5dc977b3e2f6bdf7c4306622d&imgtype=0&src=http%3A%2F%2Fimg0.imgtn.bdimg.com%2Fit%2Fu%3D3743434860%2C1688619269%26fm%3D214%26gp%3D0.jpg" srcset="/img/loading.gif" alt="flea"></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>上面是测试结果</p><p>今天再看博客时，发现昨天做玩的本地图片的功能今天用不了，暂时还没有解决</p><p>在上课时老师提到这个问题，我就利用上课的时间顺便测试利用网络地址的方式来完成图片插入</p><p>老师上课时提到一个可以利用Typora 可以保存网络图片到本地</p><p>我测试的结果是，1、使用网络地址可以再博客和Typora中显示，2、使用绝对地址可以在Typora中显示，不能在博客显示，这个时候设置是保存图片到本地了已经。3、勾选有先相对地址可以保存到本地但是，都不能显示。意思就是如果利用Typora保存到本地就不可以。</p><p>我在想，如果我插件可以重新用起来的话，Typora这种方法可能也就兼容了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录6</title>
    <link href="/2020/03/26/%E8%AE%B0%E5%BD%956/"/>
    <url>/2020/03/26/%E8%AE%B0%E5%BD%956/</url>
    
    <content type="html"><![CDATA[<h1 id="图片测试成功！"><a href="#图片测试成功！" class="headerlink" title="图片测试成功！"></a>图片测试成功！</h1><p>本地图片测试成功了</p><p>通过和同学的交流找到了问题所在，</p><p>通过写插入片的操作时</p><pre><code>![图片名](图片名称.图片格式)</code></pre><p>不用在（）中填入图片路径</p><p>因为之前插入的插件</p><p><code>npm install hexo-asset-image --save</code></p><p>可以生成一个和博客同名的文件夹放在博客文件目录下，这样直接把你的图片放在文件夹下就可以了</p><p><img src="/26/%E8%AE%B0%E5%BD%956/t.png" srcset="/img/loading.gif" alt> 我是在记录5的时候安装的插件，所以从记录五之后会生成文件夹</p><p>图片功能测试成功！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录5</title>
    <link href="/2020/03/26/%E8%AE%B0%E5%BD%955/"/>
    <url>/2020/03/26/%E8%AE%B0%E5%BD%955/</url>
    
    <content type="html"><![CDATA[<h1 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h1><p>下面插入图片</p><p><img src="/26/%E8%AE%B0%E5%BD%955/ENCORE.png" srcset="/img/loading.gif" alt="encore"></p><p>保存测试</p><p>测试一下这种方法↓↓↓</p><p>1.首先把blog（hexo）目录下的_config.yml里的psot_asset_folder:设置为true</p><p>2.在blog（hexo）目录下执行:</p><pre><code>npm install hexo-asset-image --save复制代码</code></pre><p>3.在blog（hexo）目录下Git Bash Here，运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹。</p><p>4.将想要上传的图片先扔到文件夹下，然后在博客中使用markdown的格式引入图片：</p><pre><code>![你想要输入的替代文字](xxxx/图片名.jpg)复制代码</code></pre><p>ps：因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。</p><p>5.然后，使用hexo g部署的时候，进入public\2018\04\19\index.html文件中查看相关字段，可以发现html标签内的语句是img src = “2018/04/19/xxxx/图片名.jpg”而不是img src=”xxxx.图片名.jpg”，这就成功了，当然前面步骤操作正确的话，这一步也不用检查。</p><p>作者：不吃蘑菇的马里奥<br>链接：<a href="https://juejin.im/post/5ad8b6e6518825672205be3d" target="_blank" rel="noopener">https://juejin.im/post/5ad8b6e6518825672205be3d</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录4</title>
    <link href="/2020/03/26/%E8%AE%B0%E5%BD%954/"/>
    <url>/2020/03/26/%E8%AE%B0%E5%BD%954/</url>
    
    <content type="html"><![CDATA[<h1 id="关于评论模块"><a href="#关于评论模块" class="headerlink" title="关于评论模块"></a>关于评论模块</h1><p>今天我在睡觉时脑中不断想解决办法来构思，</p><p>想到一个“投机取巧”的方法：</p><p>因为在浏览Valine 的官网（<a href="https://valine.js.org）时，看见左侧目录栏，是有" target="_blank" rel="noopener">https://valine.js.org）时，看见左侧目录栏，是有</a> “在Hexo中使用”这一标签栏</p><p>里面有很多别人的博客里用了Valine的评论系统</p><p>所以我就用了这些人的BLOG主题，里面的评论的代码或者配置都已经弄好了。我只需要把自己的ID和KEY填进去就可以用了</p><p>之后考虑如果不自带，自己怎么把这个评论模块弄出来</p><p>今天继续把图片插入到博客中……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录3</title>
    <link href="/2020/03/26/%E8%AE%B0%E5%BD%953/"/>
    <url>/2020/03/26/%E8%AE%B0%E5%BD%953/</url>
    
    <content type="html"><![CDATA[<h1 id="关于评论功能"><a href="#关于评论功能" class="headerlink" title="关于评论功能"></a>关于评论功能</h1><p>评论功能始终弄不出来，已经02:54:22</p><pre><code class="js">// Register AV objects to the globalwindow.AV = require(&#39;leancloud-storage&#39;);// Use importimport Valine from &#39;valine&#39;;// or Use requireconst Valine = require(&#39;valine&#39;);new Valine({    el:&#39;#vcomments&#39;,    // other config})</code></pre><p>这部分代码我不明白什么意思，它们应该加在什么地方不知道。</p><p>在一个主题中是否只有自带评论的功能比如 Valine 的评论功能，你通过更改 ID和KEY即可使用吗？</p><p>但是如果你的主题不自己附带评论功能，你自己该如何操作？</p><p>难道需要自己把评论模块的网页代码给写出来吗？</p><p>comments -script.pug 这个文件里的 </p><p><code>if page.content  script(src=&quot;https://www.unpkg.com/valine/dist/Valine.min.js&quot; defer)  script.    window.addEventListener(&#39;DOMContentLoaded&#39;, () =&gt; {      new Valine({        el: &#39;#comments&#39;,        appId: &#39;yUy5Q7ezUjAbGxxxxxxxxx-gzGzoHsz&#39;,        appKey: &#39;DPrxxxxxxxxxxx6ncu&#39;,        notify:false,        verify:false,        avatar:&#39;mp&#39;,        placeholder: &#39;说几句&#39;,        visitor: true      })    })</code></p><p>这段代码该上自己的ID 和KEY之后还是没有什么用处。</p><p>评论具体加在了哪儿，也没找的到</p><p>或许也根本没加上</p><p>我已经弄不清楚了，也找不到更详细的教程</p><p>可能我还没接触到某些方面的知识，真的很头疼……</p><p>今天顶不住了，明天起床再说吧</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录2</title>
    <link href="/2020/03/25/%E8%AE%B0%E5%BD%952/"/>
    <url>/2020/03/25/%E8%AE%B0%E5%BD%952/</url>
    
    <content type="html"><![CDATA[<h1 id="继续记录建立博客过程"><a href="#继续记录建立博客过程" class="headerlink" title="继续记录建立博客过程"></a>继续记录建立博客过程</h1><p>现在我已经建立好了博客基础，刚刚测试上传图片功能失败了，打算之后再想想办法</p><p>已经成功部署到GitHub上了  访问地址按要求为  CCIT18081430104.github.io</p><p>接下来先我要先选择一个合适的主题来装饰我的博客，然后把图片和评论功能加上</p><p>SETP BY SETP</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录1</title>
    <link href="/2020/03/25/%E8%AE%B0%E5%BD%951/"/>
    <url>/2020/03/25/%E8%AE%B0%E5%BD%951/</url>
    
    <content type="html"><![CDATA[<h1 id="博客记录"><a href="#博客记录" class="headerlink" title="博客记录"></a>博客记录</h1><p>第一次建立BLOG的时候只建立的一个简单的框架，之后就再也没动过。</p><p>今天再看的时候发现并不能打开BLOG了，本地和GITHUB都已经打不开了，也不知道什么原因，</p><p>今天准备重新进行创建博客。</p><p>后续会持续记录在自己的博文中……</p><h2 id="第二次操作"><a href="#第二次操作" class="headerlink" title="第二次操作"></a>第二次操作</h2><p>第二次操作时我发现在cmd.exe中输入 hexo -V 和 node -v 的版本全都不存在，即使换到目录下也不存在，我没有找到解决办法，于是我就用最简单的解决办法，所有的东西全部重新来一遍，这样不仅能够排除错误，也能够更熟悉建立PB的这个过程。</p><p>现在我正在按顺序进行博文记录……</p><h2 id="进行插入图片测试"><a href="#进行插入图片测试" class="headerlink" title="进行插入图片测试"></a>进行插入图片测试</h2><p>我可以顺便按要求把图片插入，我采用的是 用Typora的方式用图片本地绝对路径进行图片插入，我在blog下创建了一个source文件夹下创建了一个image文件夹来存放少量图片，我用对应的Markdown语法来访问它们 “!【alt】(图片地址)”（其中【】改成英文方式[]即可）</p><p><img src="/25/%E8%AE%B0%E5%BD%951/E:%5CData%5Cblog%5Csource%5Cimage%5CENCORE.png" srcset="/img/loading.gif" alt="alt"></p><p>还有相对路径方法稍后可以试验一下</p><p>之后购买了服务器后可以尝试把图片存放CDN利用src链接进行插入图片</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
